name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  download_test_files:
    runs-on: ubuntu-latest

    steps:
      - name: Preprocessing download
        uses: satackey/action-google-drive@v1.2.1
        with:
          skicka-tokencache-json: ${{ secrets.SKICKA_TOKENCACHE_JSON }}
          download-from: /MOSCA_CI
          download-to: ./
          google-client-id: ${{ secrets.GOOGLE_CLIENT_ID }}
          google-client-secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}

      - name: see those files
        run: ls

      - name: unzip the files
        run: unzip ci_preprocessing.zip

      - name: see head
        run: head mt_R1.fastq

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          tags: mosca:latest
          outputs: type=docker,dest=/tmp/mosca.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: mosca
          path: /tmp/mosca.tar

  use:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: mosca
          path: /tmp

      - name: Load Docker image
        run: |
          docker load --input /tmp/mosca.tar
          docker image ls -a

      - name: Check for MOSCA
        run: docker run mosca --version

      - name: Preprocess
        run: docker run -it --rm --entrypoint /bin/bash mosca -c "python share/MOSCA/scripts/preprocess.py --help"