# this rule is deprecated, but should be reintegrated for skipping assembly

rule entry_count:
    input:
        uniprotinfo=f"{OUTPUT}/Annotation/uniprotinfo.tsv",
        blasts=expand("{output}/Annotation/{name}/aligned.blast",output=OUTPUT, name=mg_exps['Name'].tolist())
    output:
        f"{OUTPUT}/MOSCA_Entry_Counts_Report.xlsx",
        f"{OUTPUT}/Quantification/expression_matrix.tsv"
    threads:
        1
    run:
        uniprotinfo = pd.read_csv(input.uniprotinfo[0], sep='\t')
        result = pd.DataFrame(columns=['sseqid'])
        i = 1
        names = []
        for blast in input.blasts:
            name = blast.split('/')[-2]
            print(f'[{i}/{len(input.blasts)}] Quantifying entries for: {blast}')
            data = parse_blast(blast).groupby('sseqid').size().reset_index(name=name)
            data['sseqid'] = [ide.split('|')[1] if ide != '*' else ide for ide in data['sseqid']]
            result = pd.merge(result, data, on='sseqid', how='outer')
            i += 1
            names.append(name)
        result.columns = ['Entry'] + result.columns.to_list()[1:]
        print(f'Merging entry counts with info at {input.uniprotinfo[0]}')
        result = pd.merge(result, uniprotinfo, on='Entry', how='left')
        multi_sheet_excel(f"{OUTPUT}/MOSCA_Entry_Counts_Report.xlsx", result, sheet_name='Sheet')
        result.to_csv(f"{OUTPUT}/MOSCA_Entry_Counts_Report.tsv", index=False, sep='\t')
        result[['Entry'] + names].to_csv(f"{OUTPUT}/Quantification/expression_matrix.tsv",
                                         sep='\t', index=False)
